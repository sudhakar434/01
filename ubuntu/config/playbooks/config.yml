- hosts: all
  remote_user: chillaranand
  become: yes
  become_method: sudo

  vars:
    root_email: anand21nanda@gmail.com
    user: chillaranand
    home: "/home/{{user}}/"
    config_root: "{{ home }}.01/"
    venv_root: "{{ home }}.virtualenvs/"

    ssh_users:
      - chillaranand

    utils:
      - clementine
      - vlc
      - compizconfig-settings-manager
      - compiz-plugins-extra
      - unity-tweak-tool
      - indicator-sysmonitor

      - build-essential
      - dconf-tools
      - arpon
      - tree
      - htop
      - nmap
      - npm
      - synapse
      - unzip
      - xcape
      - pastebinit
      - nethogs
      - fluxgui
      - git

      - tesseract-ocr

      - python-dev
      - python3-dev
      - python-pip
      - virtualenvwrapper

      - virtualbox

    ppas:
      - ppa:synapse-core/ppa
      - ppa:nathan-renniewaldock/flux


  tasks:

    - name: Add third party PPAs
      apt_repository: repo={{ item }} state=present
      with_items: "{{ ppas }}"


    - name: Install ubuntu packages
      apt: name={{ item }} state=present update_cache=yes cache_valid_time=8640000
      with_items: "{{ utils }}"


    - block:
      - name: Check if pyenv is installed
        stat: path=/usr/local/bin/pyenv
        register: pyenv
      - name: Download pyenv installer
        get_url:
          url=https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get
          dest=/tmp/helm-installer
          mode=0777
        when:
          pyenv.stat.exists == False
      - name: Install pyenv installer
        command: /bin/bash /tmp/pyenv-installer
        when:
          pyenv.stat.exists == False


    - name: Create virtualenv and install requirements
      pip:
        requirements: "{{ config_root }}/ubuntu/config/requirements.txt"
        virtualenv: "{{ venv_root }}/p35"
        virtualenv_python: python3.5


    - block:
      - name: Check if helm is installed
        stat: path=/usr/local/bin/helm
        register: helm
      - name: Download helm installer
        get_url:
          url=https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
          dest=/tmp/helm-installer
          mode=0777
        when:
          helm.stat.exists == False
      - name: Install helm installer
        command: /bin/bash /tmp/helm-installer
        when:
          helm.stat.exists == False

    - block:
      - name: Check if kubectl installed
        stat: path=/usr/local/bin/kubectl
        register: binary
      - name: Download installer
        get_url:
          url=https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl
          dest=/tmp/binary
          mode=0777
        when:
          binary.stat.exists == False
      - name: Install
        command: mv /tmp/binary /usr/local/bin/kubectl
        when:
          binary.stat.exists == False

    - block:
      - name: Check if minikube installed
        stat: path=/usr/local/bin/minikube
        register: binary
      - name: Download installer
        get_url:
          url=https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
          dest=/tmp/binary
          mode=0777
        when:
          binary.stat.exists == False
      - name: Install
        command: mv /tmp/binary /usr/local/bin/minikube
        when:
          binary.stat.exists == False

    - block:
      - name: Check if gcloud is installed
        stat: path=/usr/bin/gcloud
        register: gcloud
      - name: Install gcloud
        apt: name=google-cloud-sdk state=present update_cache=yes cache_valid_time=8640000
        when:
          gcloud.stat.exists == False
      # - name: Update gcloud
      #   command: gcloud components update


    # - block:
    #   - name: Check if deis is installed
    #     stat: path=/usr/local/bin/deis
    #     register: deis
    #   - name: Download deis installer
    #     get_url:
    #       url=http://deis.io/deis-cli/install-v2.sh
    #       dest=/tmp/deis-installer
    #       mode=0777
    #     when:
    #       deis.stat.exists == False
    #   - name: Install deis installer
    #     command: /bin/bash /tmp/deis-installer
    #     when:
    #       deis.stat.exists == False
    #   - name: Move binary deis
    #     command: mv deis /usr/local/bin/deis


    # - block:

    #   - name: Check if kubectl is installed
    #     stat: path='/usr/local/bin/{{ item.name }}'

    #     register: binary
    #     with_items:
    #       - { name: 'kubectl', url: 'https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl' }

    #   - name: Download kubectl installer
    #     get_url:
    #       url='{{ item.url }}'
    #       dest='/tmp/{{ item.url }}'
    #       mode=0777
    #     when:
    #       binary.stat.exists == False
    #     with_items:
    #       - {name: 'kubectl', url: 'https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl'}

    #   - name: Move binary
    #     command: 'mv /tmp/{{ item.name }} /usr/local/bin/{{ item.name }}'
    #     with_items:
    #       - {name: 'kubectl', url: 'https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl'}


    # - name: Create symlinks for files
    #   file:
    #     src: '{{ item.src }}'
    #     dest: '{{ item.dest }}'
    #     state: link
    #   with_items:
    #     - { src: '~/.01/ubuntu/config/zsh/zshrc.sh', dest: '~/.zshrc' }



   # - name: Install docker
   #    command: curl -sSL https://get.docker.com/ | sudo bash

    # - git: repo=git://foosball.example.org/path/to/repo.git
           # dest: /home/chillaranand/.qfc
